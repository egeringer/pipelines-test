# This is a basic workflow that is manually triggered

name: Manual deploy

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      message:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Deploy message'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true
      environment:
        description: 'Environment to get the code deployed to'
        type: environment
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deployLog:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: 
      name: development
      url: https://development.github.com
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Log Deployment Environment
      run: echo "Deploying ${{ github.event.inputs.environment }} - Message ${{ github.event.inputs.message }}"
      
  slackNotification:
    runs-on: ubuntu-latest
    environment: 
      name: "${{ github.event.inputs.environment }}"
    steps:
    - name: Send GitHub Action trigger data to Slack workflow
      id: slack
      uses: slackapi/slack-github-action@v1.21.0
      env:
        SLACK_WEBHOOK_URL: '${{ secrets.SLACK_WEBHOOK_URL }}'
      with:
        # This data can be any valid JSON from a previous step in the GitHub Action
        payload: |
          {
            "environment": "${{ github.event.inputs.environment }}",
            "message": "${{ github.event.inputs.message }}",
            "status": "${{ job.status }}"
          }
  
  deployToS3:
    name: Upload to Amazon S3
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: 'AKIAXKQKVAG5ONUJ5EV5'
        aws-secret-access-key: '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'
        role-to-assume: 'arn:aws:iam::503607263674:githubToS3/githubToS3User'
        role-duration-seconds: 1200
        role-session-name: 'MySessionName'
        aws-region: us-east-1
    - name: Install Dependencies
      run: |
        yarn install
    - name: Build App
      run: |
        yarn build
    - name: Copy files to the dev account with the AWS CLI
      run: |
        aws s3 cp --recursive --acl public-read ./build s3://dtsm-dev-static-websit
